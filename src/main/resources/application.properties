# Load secrets.properties optionally, so local secrets override defaults
spring.config.import=optional:file:./secrets.properties

# Server config
server.port=${SERVER_PORT:8080}
server.forward-headers-strategy=framework
spring.application.name=forkmyfolio-backend

# Datasource (use env or secrets)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/forkmyfolio_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


spring.sql.init.mode=always

# JPA/Hibernate: Let Flyway manage the schema. 'none' prevents Hibernate from interfering.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

# --- Flyway Configuration ---
# The repair is now handled programmatically for the one-time fix.
# No special properties are needed here for normal operation.
spring.flyway.enabled=false

# --- JWT and Cookies ---

# A default, insecure key for local development ONLY.
# For production, this MUST be set via the JWT_SECRET_KEY environment variable.
app.jwt.secret=${JWT_SECRET_KEY:c2VjcmV0S2V5Zm9yZm9ya215Zm9saW9hcHBsaWNhdGlvbjEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MA==}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:3600000}
app.jwt.refresh-expiration-ms=${JWT_REFRESH_EXPIRATION_MS:604800000}
app.jwt.refresh-cookie-name=refreshToken

# --- FIX: Cookie settings updated for better local development experience ---
# Default to 'false' for local HTTP development. Production (over HTTPS) MUST set APP_COOKIE_SECURE=true.
app.cookie.secure=${APP_COOKIE_SECURE:false}
# 'Lax' is a good default. It's secure but works for cross-port communication on localhost.
app.cookie.samesite=${APP_COOKIE_SAMESITE:Lax}
# Default to an empty domain, which is correct for localhost.
app.security.cookie-domain=${APP_SECURITY_COOKIE_DOMAIN:}
# Default to allow requests from the standard Vite dev server ports.
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:5173,http://127.0.0.1:5173}

# --- OAuth2 Client Configuration ---
# THIS IS THE FIX: Provide the necessary configuration for OAuth2 providers.
# These properties allow Spring to create the ClientRegistrationRepository bean.
# For local development, you can add these to a 'secrets.properties' file.
# For production, these MUST be set as environment variables.

# Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# GitHub
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/oauth2/callback/github
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# --- Authorized Redirect URIs for OAuth2 ---
# This is used by our custom success handler to prevent open redirect vulnerabilities.
app.oauth2.authorized-redirect-uris=http://localhost:5173/oauth2/redirect


# --- Default Admin User ---
# These properties are used by the DataInitializer to ensure an admin account exists on startup.
# For production, these should be set via environment variables.
app.admin.email=${ADMIN_EMAIL:admin@forkmyfolio.com}
app.admin.password=${ADMIN_PASSWORD:SecureAdminPassword123!}
app.admin.firstName=${ADMIN_FIRST_NAME:Admin}
app.admin.lastName=${ADMIN_LAST_NAME:User}

# Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Logging: reduce noise
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF
logging.level.org.hibernate.hql.internal.ast.AST=OFF
logging.level.org.hibernate.engine.jdbc.spi.SqlStatementLogger=OFF
logging.level.org.hibernate.orm.jdbc.bind=OFF
logging.level.org.hibernate.orm.jdbc.extract=OFF